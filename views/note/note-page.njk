---
layout: note
pagination:
  data: notes
  size: 1
  alias: noteItem
permalink: "note/{{ noteItem.name | slug }}/"
---
{# only permalink and eleventyComputed can contain variables/shortcodes in this frontmatter format (and Im not sure I can work out pagination with a ---js frontmatter at the moment) #}
{# title: "{{ noteItem.name | slug }}" #}
{# eleventyComputed: #}

{# 
  This file, combined with note.11tydata.js, using data
  computed from _data/notes.js, populates the note/
  directory in the site output with note data from the
  server. It is fetched at build time.
  We could have this file in the root, because the 
  permalink frontmatter data sets it to the note/ 
  directory. The idea though is to group related information
  together. Perhaps if we didn't need a note.11tydata.js, or
  weren't planning an index page, then we might do that.
#}

{# Set header <title> here using note name #}
{# <h1> #}
{# <h1>Name: {{ noteItem.name }}</h1>
<h2>{{ noteItem | access("name") }}</h2> #}

{# later on this link might only appear in certain circumstances, based on what the server provides #}
{# heck, it might even just drop-in add an editor-hf wrapping the contents - we have some options. #}
{# I'm not sure I mind going to a different route or not, maybe I like the option to do that but also
  have a component in place that can update in-place. Only available if you have permissions.
  TODO iDEA for later 
  #}
<a href="/edit/{{ noteItem.name }}">Edit</a>
<br>
{{ noteItem.content | safe }}

<!-- <script>

  const resourceName = window.location.pathname.match(/[^\/]*$/)[0] // grabs the string in the url past the last forward slash
</script> -->